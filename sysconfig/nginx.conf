worker_processes  1;
worker_rlimit_nofile 1024;
events {
    worker_connections  800;
}

http {
    include       mime.types;
    default_type  application/octet-stream;
    keepalive_timeout  65;
    limit_req_status 429;
    limit_conn_status 429;
    server_tokens off;
    log_format upstream_time '$remote_addr - $remote_user [$time_local] '
                             '"$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent"'
                             'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';
    limit_req_zone $binary_remote_addr zone=mylimit:10m rate=5r/s;
    server {
        listen        443 ssl;
        listen        [::]:443 ssl;
        ssl_certificate /etc/ssl/cert.cert;
        ssl_certificate_key /etc/ssl/private/cert.key;
        ssl_trusted_certificate /etc/ssl/cert.fullchain.cert;
        # Improve HTTPS performance with session resumption
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        # Enable server-side protection against BEAST attacks
        ssl_protocols TLSv1.2;
        ssl_prefer_server_ciphers on;
        ssl_ciphers "ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384";

        access_log   /var/www/logs/access.log upstream_time;
        error_log    /var/www/logs/error.log warn;
        server_name  localhost;
        location ~ ^/messages {
          limit_req zone=mylimit;
          proxy_pass http://localhost:8080;
        }
        location / {
           proxy_pass       http://localhost:8080;
        }

        location ~ ^/admin {
           deny            all;
        }

       location /ws {
            proxy_pass http://localhost:8080;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }
    }
}
